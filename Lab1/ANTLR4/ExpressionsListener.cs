//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\antos07\Documents\University\OOP Labs\Lab1\Lab1\Models\Parsers\antlr4\Expressions.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ExpressionsParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IExpressionsListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] ExpressionsParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] ExpressionsParser.BooleanExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperator([NotNull] ExpressionsParser.ComparisonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperator([NotNull] ExpressionsParser.ComparisonOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.booleanOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanOperator([NotNull] ExpressionsParser.BooleanOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.booleanOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanOperator([NotNull] ExpressionsParser.BooleanOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpression([NotNull] ExpressionsParser.ArithmeticExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.arithmeticExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpression([NotNull] ExpressionsParser.ArithmeticExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.arithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticOperator([NotNull] ExpressionsParser.ArithmeticOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.arithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticOperator([NotNull] ExpressionsParser.ArithmeticOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ExpressionsParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ExpressionsParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressionsParser.cellId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCellId([NotNull] ExpressionsParser.CellIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressionsParser.cellId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCellId([NotNull] ExpressionsParser.CellIdContext context);
}
